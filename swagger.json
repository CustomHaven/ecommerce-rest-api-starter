{
    "openapi": "3.0.0",
    "info": {
        "title": "Ecommerce REST API",
        "version": "1.0.0",
        "description": "Codecademy REST API",
        "license": {
            "name": "MIT",
            "url": "https://choosealicense.com/licenses/mit/"
        }
    },
    "schema": [
        "http",
        "https"
    ],
    "servers": [
        {
            "url": "https://rest-api-no-orm.herokuapp.com/"
        },
        {
            "url": "http://localhost:4001/"
        }
    ],
    "security": [
        {
            "basicAuth": []
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Add new user",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "type": "Successful",
                        "content": {}
                    },
                    "400": {
                        "type": "Invalid email/password supplied",
                        "content": {}
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add a new user",
                "description": "New user",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Add new user",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Register New User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New user added",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Login as an administrator to view all the users before you attempted this",
                "description": "Only an admin can view all users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "All users",
                        "content": {}
                    },
                    "401": {
                        "description": "Unathorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": {
                    "cookieAuth": []
                },
                "summary": "Get yourself",
                "description": "Your details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1
                            ]
                        },
                        "description": "cookie"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Your details",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "security": {
                    "cookieAuth": []
                },
                "summary": "Update your details",
                "description": "Update details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1
                            ]
                        },
                        "description": "cookie"
                    }
                ],
                "requestBody": {
                    "description": "Update your login information",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Update User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "You'r details",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "security": {
                    "cookieAuth": []
                },
                "summary": "Delete your own account yourself",
                "description": "Delete yourself",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1
                            ]
                        },
                        "description": "cookie"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully deleted your account",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/dealers": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Supplier details",
                "description": "Suppliers Info",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Add a new supplier",
                "description": "A new supplier",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Add a new supplier",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier Info"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Supplier added",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/dealers/{dealerId}": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Find a Supplier based on ID",
                "description": "Supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dealerId",
                        "in": "path",
                        "description": "Enter a number to find a supplier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Update a supplier's details",
                "description": "Update supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dealerId",
                        "in": "path",
                        "description": "Enter a number to fetch a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update supplier",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier Info"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Delete a supplier completely",
                "description": "Delete supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dealerId",
                        "in": "path",
                        "description": "Enter a number to fetch a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/dealers/{name}/products": {
            "get": {
                "tags": [
                    "Supplier's Products"
                ],
                "summary": "List a supplier's products",
                "description": "Supplier product list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Enter the name of a supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier and their products",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Supplier's Products"
                ],
                "summary": "Save a new product from a supplier",
                "description": "Save product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Enter the name of a supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Add a product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier's Products"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier and their products",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/dealers/{name}/products/{productId}": {
            "get": {
                "tags": [
                    "Supplier's Products"
                ],
                "summary": "Get one product of a supplier",
                "description": "One product from supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Enter the name of a supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Enter the id of a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier's product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Supplier's Products"
                ],
                "summary": "Update one product of a supplier's products",
                "description": "Update one product from supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Enter the name of a supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Enter the id of a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Add a new product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier's Products"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier's product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Supplier's Products"
                ],
                "summary": "Delete one product from a supplier's products",
                "description": "Delete one product from supplier",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Enter the name of a supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Enter the id of a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully Deleted",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Store Products"
                ],
                "summary": "Get all products in store",
                "description": "Every product",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Store Products"
                ],
                "summary": "Make a new project",
                "description": "New product",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Add a new product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/New Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New user added",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": [
                    "Store Products"
                ],
                "summary": "Get one product based on ID",
                "description": "A product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Enter a number to fetch a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Store Products"
                ],
                "summary": "Update one product based on ID",
                "description": "Update product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Enter a number to fetch a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update the product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Update Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Updated Successful",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to Update",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Store Products"
                ],
                "summary": "Delete one product based on ID",
                "description": "Delete product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Delete a product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully Deleted",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to Delete",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "description": "All customers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Make a new customer",
                "description": "New customer",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Add a new customer",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#components/schemas/New Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer added",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/customers/{customerId}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get one customer",
                "description": "One customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "Fetch a customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer found",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer's details",
                "description": "Update customer info",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "Enter customer's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update the customer",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/New Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer updated",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to Update",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "description": "Delete customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "Insert customer's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete customer",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/orderlist": {
            "get": {
                "tags": [
                    "List Of Orders"
                ],
                "summary": "Display the whole list",
                "description": "Entire List",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "List Of Orders"
                ],
                "summary": "Set up an order list from cart list",
                "description": "Set up order list",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Set up order list",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/An Order List"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully made an order list for a customer",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to make an order list",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/orderlist/{date}": {
            "delete": {
                "tags": [
                    "List Of Orders"
                ],
                "summary": "Delete a customer's order list",
                "description": "Delete an order list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Enter a date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted order list/cart list",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to delete the order list",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/orderlist/{customerId}/{date}": {
            "get": {
                "tags": [
                    "List Of Orders"
                ],
                "summary": "Find a particular item that a customer has bought",
                "description": "Find the bought item",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "Enter the customer's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Enter a date",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found the item",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Completed orders",
                "description": "Successfully Purchases",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "All orders",
                        "content": {}
                    },
                    "404": {
                        "description": "No orders",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "The store is growing a new order has been submitted",
                "description": "A new order submitted",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "New order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New order added",
                        "content": {}
                    },
                    "404": {
                        "description": "Failed to add the order",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/orders/email/{orderId}": {
            "get": {
                "tags": [
                    "Email Client"
                ],
                "summary": "Email customer to tell them their order was successful",
                "description": "Email the customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Enter the order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Check your inbox",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/newadmin": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Add a new admin user",
                "description": "New administrator",
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "description": "Administrator",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Register New User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The new admin successfully joined",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "schemas": {
            "Login": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": [
                    "username",
                    "password"
                ]
            },
            "Register New User": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "first_name",
                    "last_name"
                ]
            },
            "Update User": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": false
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "nullable": false
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": false
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Supplier Info": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Stark Industries",
                    "description": "Run by Tony Stark, the Iron Man"
                }
            },
            "Supplier's Products": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "example": {
                    "product_name": "Reebok",
                    "type": "Clothes",
                    "description": "Warm jumper",
                    "price": 20,
                    "quantity": 5000
                }
            },
            "New Product": {
                "type": "object",
                "properties": {
                    "dpid": {
                        "type": "integer"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "required": [
                    "dpid",
                    "product_name",
                    "quantity"
                ],
                "example": {
                    "dpid": 3,
                    "product_name": "Baked Beans",
                    "type": "Food",
                    "description": "Best beans in town!",
                    "quantity": 200
                }
            },
            "Update Product": {
                "type": "object",
                "properties": {
                    "dealer_product_dpid": {
                        "type": "integer"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "example": {
                    "dealer_product_dpid": 3,
                    "product_name": "Baked Beans",
                    "type": "Food",
                    "description": "Best beans in town!",
                    "quantity": 200
                }
            },
            "New Customer": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "example": {
                    "first_name": "John",
                    "last_name": "Doe",
                    "address": "10 Downing Street",
                    "zip_code": "SW1A 2AA",
                    "city": "London",
                    "country": "United Kingdom",
                    "email": "example@example.com"
                }
            },
            "An Order List": {
                "type": "array",
                "properties": [
                    {
                        "customers_cid": {
                            "type": "integer"
                        },
                        "store_products_spid": {
                            "type": "integer"
                        },
                        "quantity": {
                            "type": "integer"
                        }
                    },
                    {
                        "customers_cid": {
                            "type": "integer"
                        },
                        "store_products_spid": {
                            "type": "integer"
                        },
                        "quantity": {
                            "type": "integer"
                        }
                    },
                    {
                        "customers_cid": {
                            "type": "integer"
                        },
                        "store_products_spid": {
                            "type": "integer"
                        },
                        "quantity": {
                            "type": "integer"
                        }
                    },
                    {
                        "customers_cid": {
                            "type": "integer"
                        },
                        "store_products_spid": {
                            "type": "integer"
                        },
                        "quantity": {
                            "type": "integer"
                        }
                    }
                ],
                "example": [
                    {
                        "customers_cid": 32,
                        "store_products_spid": 3,
                        "quantity": 3
                    },
                    {
                        "customers_cid": 32,
                        "store_products_spid": 5,
                        "quantity": 5
                    },
                    {
                        "customers_cid": 32,
                        "store_products_spid": 6,
                        "quantity": 6
                    },
                    {
                        "customers_cid": 32,
                        "store_products_spid": 4,
                        "quantity": 4
                    }
                ]
            },
            "Order": {
                "type": "object",
                "properties": {
                    "customers_cid": {
                        "type": "integer"
                    },
                    "status_completed": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "example": {
                    "customers_cid": 32,
                    "status_completed": true,
                    "created_at": "2021-10-03 19:06:34"
                }
            }
        }
    }
}